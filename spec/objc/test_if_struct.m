// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "if_struct.h"

@interface if_struct : XCTestCase
@property (strong) if_struct_t *r;
@end

@implementation if_struct

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/if_struct.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [if_struct_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_if_struct {
    /* simpleAssert: TestAssert(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op1)),identifier(opcode)),IntNum(83))*/
    XCTAssertEqual(((operation_if_struct_t *)((if_struct_t *)_r).op1).opcode.unsignedCharValue, 83);
    /* simpleAssert: TestAssert(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op1)),identifier(arg_str)),identifier(str)),Str(foo))*/
    XCTAssertEqualObjects(((arg_str_if_struct_t *)((operation_if_struct_t *)((if_struct_t *)_r).op1).arg_str).str, (@"foo"));
    /* simpleAssert: TestAssert(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op2)),identifier(opcode)),IntNum(84))*/
    XCTAssertEqual(((operation_if_struct_t *)((if_struct_t *)_r).op2).opcode.unsignedCharValue, 84);
    /* simpleAssert: TestAssert(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op2)),identifier(arg_tuple)),identifier(num1)),IntNum(66))*/
    XCTAssertEqual(((arg_tuple_if_struct_t *)((operation_if_struct_t *)((if_struct_t *)_r).op2).arg_tuple).num1.unsignedCharValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op2)),identifier(arg_tuple)),identifier(num2)),IntNum(67))*/
    XCTAssertEqual(((arg_tuple_if_struct_t *)((operation_if_struct_t *)((if_struct_t *)_r).op2).arg_tuple).num2.unsignedCharValue, 67);
    /* simpleAssert: TestAssert(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op3)),identifier(opcode)),IntNum(83))*/
    XCTAssertEqual(((operation_if_struct_t *)((if_struct_t *)_r).op3).opcode.unsignedCharValue, 83);
    /* simpleAssert: TestAssert(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(op3)),identifier(arg_str)),identifier(str)),Str(bar))*/
    XCTAssertEqualObjects(((arg_str_if_struct_t *)((operation_if_struct_t *)((if_struct_t *)_r).op3).arg_str).str, (@"bar"));
}
@end
