// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "expr_enum.h"

@interface expr_enum : XCTestCase
@property (strong) expr_enum_t *r;
@end

@implementation expr_enum

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/term_strz.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [expr_enum_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_expr_enum {
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(const_dog)),EnumByLabel(identifier(animal),identifier(dog),typeId(false,ArrayBuffer(expr_enum),false)))*/
    XCTAssertEqualObjects(((expr_enum_t *)_r).const_dog, ([@"dog" KSENUMWithDictionary:expr_enum_t._animal]));
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(derived_boom)),EnumByLabel(identifier(animal),identifier(boom),typeId(false,ArrayBuffer(expr_enum),false)))*/
    XCTAssertEqualObjects(((expr_enum_t *)_r).derived_boom, ([@"boom" KSENUMWithDictionary:expr_enum_t._animal]));
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(derived_dog)),EnumByLabel(identifier(animal),identifier(dog),typeId(false,ArrayBuffer(expr_enum),false)))*/
    XCTAssertEqualObjects(((expr_enum_t *)_r).derived_dog, ([@"dog" KSENUMWithDictionary:expr_enum_t._animal]));
}
@end
