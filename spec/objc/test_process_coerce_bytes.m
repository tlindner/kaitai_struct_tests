// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "process_coerce_bytes.h"

@interface process_coerce_bytes : XCTestCase
@property (strong) process_coerce_bytes_t *r;
@end

@implementation process_coerce_bytes

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/process_coerce_bytes.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [process_coerce_bytes_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_process_coerce_bytes {
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(0)),identifier(flag)),IntNum(0))*/
    XCTAssertEqual(((record_process_coerce_bytes_t *)((process_coerce_bytes_t *)_r).records[0]).flag.unsignedCharValue, 0);
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(0)),identifier(buf)),List(ArrayBuffer(IntNum(65), IntNum(65), IntNum(65), IntNum(65))))*/
    XCTAssertEqualObjects(((record_process_coerce_bytes_t *)((process_coerce_bytes_t *)_r).records[0]).buf, ([NSData dataWithBytes:"\x41\x41\x41\x41" length:4]));
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(1)),identifier(flag)),IntNum(1))*/
    XCTAssertEqual(((record_process_coerce_bytes_t *)((process_coerce_bytes_t *)_r).records[1]).flag.unsignedCharValue, 1);
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(1)),identifier(buf)),List(ArrayBuffer(IntNum(66), IntNum(66), IntNum(66), IntNum(66))))*/
    XCTAssertEqualObjects(((record_process_coerce_bytes_t *)((process_coerce_bytes_t *)_r).records[1]).buf, ([NSData dataWithBytes:"\x42\x42\x42\x42" length:4]));
}
@end
