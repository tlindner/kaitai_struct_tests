// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "default_endian_expr_is_le.h"

@interface default_endian_expr_is_le : XCTestCase
@property (strong) default_endian_expr_is_le_t *r;
@end

@implementation default_endian_expr_is_le

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/endian_expr.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [default_endian_expr_is_le_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_default_endian_expr_is_le {
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(0)),identifier(indicator)),List(ArrayBuffer(IntNum(73), IntNum(73))))*/
    XCTAssertEqualObjects(((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[0]).indicator, ([NSData dataWithBytes:"\x49\x49" length:2]));
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(0)),identifier(main)),identifier(some_int)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[0]).main).some_int.unsignedIntValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(0)),identifier(main)),identifier(some_int_be)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[0]).main).some_int_be.unsignedShortValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(0)),identifier(main)),identifier(some_int_le)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[0]).main).some_int_le.unsignedShortValue, 66);
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(1)),identifier(indicator)),List(ArrayBuffer(IntNum(77), IntNum(77))))*/
    XCTAssertEqualObjects(((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[1]).indicator, ([NSData dataWithBytes:"\x4D\x4D" length:2]));
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(1)),identifier(main)),identifier(some_int)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[1]).main).some_int.unsignedIntValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(1)),identifier(main)),identifier(some_int_be)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[1]).main).some_int_be.unsignedShortValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(1)),identifier(main)),identifier(some_int_le)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[1]).main).some_int_le.unsignedShortValue, 66);
    /* simpleAssert: TestAssert(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(2)),identifier(indicator)),List(ArrayBuffer(IntNum(88), IntNum(88))))*/
    XCTAssertEqualObjects(((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[2]).indicator, ([NSData dataWithBytes:"\x58\x58" length:2]));
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(2)),identifier(main)),identifier(some_int)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[2]).main).some_int.unsignedIntValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(2)),identifier(main)),identifier(some_int_be)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[2]).main).some_int_be.unsignedShortValue, 66);
    /* simpleAssert: TestAssert(Attribute(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(docs)),IntNum(2)),identifier(main)),identifier(some_int_le)),IntNum(66))*/
    XCTAssertEqual(((main_obj_doc_default_endian_expr_is_le_t *)((doc_default_endian_expr_is_le_t *)((default_endian_expr_is_le_t *)_r).docs[2]).main).some_int_le.unsignedShortValue, 66);
}
@end
