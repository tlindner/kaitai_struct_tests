// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "float_to_i.h"

@interface float_to_i : XCTestCase
@property (strong) float_to_i_t *r;
@end

@implementation float_to_i

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/floating_points.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [float_to_i_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_float_to_i {
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(single_value)),FloatNum(0.5))*/
    XCTAssertEqual(((float_to_i_t *)_r).single_value.floatValue, 0.5);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(double_value)),FloatNum(0.25))*/
    XCTAssertEqual(((float_to_i_t *)_r).double_value.doubleValue, 0.25);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(single_i)),IntNum(0))*/
    XCTAssertEqual(((float_to_i_t *)_r).single_i.unsignedLongLongValue, 0);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(double_i)),IntNum(0))*/
    XCTAssertEqual(((float_to_i_t *)_r).double_i.unsignedLongLongValue, 0);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(float1_i)),IntNum(1))*/
    XCTAssertEqual(((float_to_i_t *)_r).float1_i.unsignedLongLongValue, 1);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(float2_i)),IntNum(1))*/
    XCTAssertEqual(((float_to_i_t *)_r).float2_i.unsignedLongLongValue, 1);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(float3_i)),IntNum(1))*/
    XCTAssertEqual(((float_to_i_t *)_r).float3_i.unsignedLongLongValue, 1);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(float4_i)),UnaryOp(Minus,IntNum(2)))*/
    XCTAssertEqual(((float_to_i_t *)_r).float4_i.unsignedLongLongValue, -2);
}
@end
