// Autogenerated from KST: please remove this line if doing any edits by hand!

#import <XCTest/XCTest.h>
#import "cast_nested.h"

@interface cast_nested : XCTestCase
@property (strong) cast_nested_t *r;
@end

@implementation cast_nested

- (void)setUp {
    [super setUp];
    NSURL *dataURL = [NSURL fileURLWithPath:@"src/switch_opcodes.bin"];
    kstream *ks = [kstream streamWithURL:dataURL];
    self.r = [cast_nested_t initialize:ks];
}

- (void)tearDown {
    [super tearDown];
    self.r = nil;
}

- (void)test_cast_nested {
    /* simpleAssert: TestAssert(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(opcodes_0_str)),identifier(value)),Str(foobar))*/
    XCTAssertEqualObjects(((strval_opcode_cast_nested_t *)((cast_nested_t *)_r).opcodes_0_str).value, (@"foobar"));
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(opcodes_0_str_value)),Str(foobar))*/
    XCTAssertEqualObjects(((cast_nested_t *)_r).opcodes_0_str_value, (@"foobar"));
    /* simpleAssert: TestAssert(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(opcodes_1_int)),identifier(value)),IntNum(66))*/
    XCTAssertEqual(((intval_opcode_cast_nested_t *)((cast_nested_t *)_r).opcodes_1_int).value.unsignedCharValue, 66);
    /* simpleAssert: TestAssert(Attribute(Name(identifier(q1w2e3)),identifier(opcodes_1_int_value)),IntNum(66))*/
    XCTAssertEqual(((cast_nested_t *)_r).opcodes_1_int_value.unsignedCharValue, 66);
}
@end
